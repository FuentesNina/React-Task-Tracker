{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onShow","showAdd","location","useLocation","pathname","task","onDelete","onToggle","completed","onDoubleClick","id","cursor","description","Tasks","tasks","map","Task","AddTask","onAdd","useState","setTitle","setDescription","setCompleted","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","year","Date","getFullYear","to","About","App","showAddTask","setShowAddTask","setTasks","path","element","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.87ec207a.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n  return <button style={{ backgroundColor:color }} className='btn' onClick={onClick}>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'yellow'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button  from './Button'\nimport { useLocation } from \"react-router-dom\"\n\nconst Header = ({ title , onShow, showAdd}) => {\n  const location = useLocation();\n\n  return (\n    <header className='header'>\n        <h1>{title}</h1>\n        {location.pathname === \"/\" && (<Button  color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onShow}/>)}\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst task = ({task, onDelete, onToggle}) => {\n  return (\n    <div className={`task ${task.completed ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n        <h3>{task.title} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\n        <p>{task.description}</p>\n    </div>\n  )\n}\n\nexport default task\n","\nimport Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n    <>\n        {tasks.map(task => (\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n        ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [completed, setCompleted] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!title) {\n            alert('Please add task')\n            return\n        }\n\n        onAdd({ title, description, completed })\n\n        setTitle('')\n        setDescription('')\n        setCompleted(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text'\n                placeholder='Add Task'\n                value={title}\n                onChange={e => setTitle(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Description</label>\n                <input type='text'\n                placeholder='Add Description'\n                value={description}\n                onChange={e => setDescription(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Task Completed?</label>\n                <input type='checkbox'\n                checked={completed}\n                value={completed}\n                onChange={e => setCompleted(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n\n    return (\n    <footer>\n      <p>Copyright &copy; {year}</p>\n      <Link to='/about'>About</Link>\n\n    </footer>\n  )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 2.0.0</h4>\n      <Link to='/'>Go Back</Link>\n    </div>\n  )\n}\n\nexport default About\n","import { useState } from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        title: 'Do all the Form Checks',\n        description: 'Go on Facebook and review the performances from the clients',\n        completed: true\n    },\n    {\n        id: 2,\n        title: 'Complete portfolio website',\n        description: 'Finish styling the projects section as well as the contact me section',\n        completed: false\n    },\n    {\n        id: 3,\n        title: 'Food Shopping',\n        description: 'Purchase all the items to make vegan crepes',\n        completed: false\n    }\n]);\n\n//Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter(task=> task.id !== id))\n}\n\n// Toggle Reminder (will become Task done)\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(task => task.id === id ? {...task, completed: !task.completed} : task))\n}\n\n  return (\n    <Router>\n          <Routes>\n            <Route path=\"*\" element={\n              <div className=\"container\">\n                <Header onShow={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks to Show'}\n                <Footer />\n              </div>\n            } />\n            <Route path=\"/about\" element={\n              <div className=\"container\">\n                <Header onShow={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n                <About />\n                <Footer />\n              </div>\n            } />\n          </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}