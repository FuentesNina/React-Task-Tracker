{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","firebaseConfig.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onShow","showAdd","location","useLocation","console","log","pathname","task","onDelete","onToggle","showCompleted","completed","onDoubleClick","id","display","cursor","description","Tasks","tasks","hideCompleted","map","Task","AddTask","onAdd","useState","setTitle","setDescription","setCompleted","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","year","Date","getFullYear","to","About","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","getFirestore","App","showAddTask","setShowAddTask","setTasks","hideComplete","setHideComplete","collectionRef","collection","orderedListRef","query","orderBy","useEffect","onSnapshot","snapshot","taskList","docs","forEach","doc","push","data","path","element","addDoc","updatedAt","serverTimestamp","length","docRef","deleteDoc","getDoc","then","updateDoc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8OAEMA,EAAS,SAAH,GAAgC,IAA3BC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAC5B,OAAO,wBAAQC,MAAO,CAAEC,gBAAgBJ,GAASK,UAAU,MAAMH,QAASA,EAAQ,SAAED,GACtF,EAEAF,EAAOO,aAAe,CAClBN,MAAO,UASID,QCZTQ,EAAS,SAAH,GAAoC,IAA9BC,EAAK,EAALA,MAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC1BC,EAAWC,cAGjB,OAFAC,QAAQC,IAAIH,GAGV,yBAAQN,UAAU,SAAQ,UACtB,6BAAKG,IACkB,MAAtBG,EAASI,UAAqB,cAAC,EAAM,CAAEf,MAAOU,EAAU,MAAQ,QAAST,KAAMS,EAAU,QAAU,MAAOR,QAASO,MAG5H,EAEAF,EAAOD,aAAe,CAClBE,MAAO,gBAOID,Q,QCbAS,EATF,YAAgD,IAA9CA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUC,EAAa,EAAbA,cACvC,OACE,sBAAKd,UAAS,eAAUW,EAAKI,UAAY,WAAa,IAAMC,cAAe,kBAAMH,EAASF,EAAKM,GAAG,EAAEnB,MAAO,CAACoB,SAA6B,IAAnBP,EAAKI,YAAwC,IAAlBD,GAA2B,QAAQ,UAChL,+BAAKH,EAAKR,MAAM,IAAC,cAAC,IAAO,CAACL,MAAO,CAAEH,MAAO,MAAOwB,OAAQ,WAAYtB,QAAS,kBAAMe,EAASD,EAAKM,GAAG,OACrG,4BAAIN,EAAKS,gBAGjB,ECMeC,EAZD,SAAH,GAAmE,IAA9DC,EAAK,EAALA,MAAOV,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAAUU,EAAa,EAAbA,cAAeT,EAAa,EAAbA,cAEtD,OACA,qCACI,yBAAQd,UAAS,cAASc,GAAiBjB,QAAS0B,EAAc,WAAoB,IAAlBT,EAAyB,OAAS,OAAO,sBAC5GQ,EAAME,KAAI,SAAAb,GAAI,OACX,cAACc,EAAI,CAAed,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,EAAUC,cAAeA,GAA5EH,EAAKM,GAAuF,MAInH,ECsCeS,EAjDC,SAAH,GAAiB,IAAZC,EAAK,EAALA,MACd,EAA0BC,mBAAS,IAAG,mBAA/BzB,EAAK,KAAE0B,EAAQ,KACtB,EAAsCD,mBAAS,IAAG,mBAA3CR,EAAW,KAAEU,EAAc,KAClC,EAAkCF,oBAAS,GAAM,mBAA1Cb,EAAS,KAAEgB,EAAY,KAiB9B,OACI,uBAAM/B,UAAU,WAAWgC,SAhBd,SAACC,GACdA,EAAEC,iBAEE/B,GAKJwB,EAAM,CAAExB,QAAOiB,cAAaL,cAE5Bc,EAAS,IACTC,EAAe,IACfC,GAAa,IARTI,MAAM,kBASd,EAGkD,UAC1C,sBAAKnC,UAAU,eAAc,UACzB,gCAAO,SACP,uBAAOoC,KAAK,OACZC,YAAY,WACZC,MAAOnC,EACPoC,SAAU,SAAAN,GAAC,OAAIJ,EAASI,EAAEO,OAAOF,MAAM,OAE3C,sBAAKtC,UAAU,eAAc,UACzB,gCAAO,gBACP,uBAAOoC,KAAK,OACZC,YAAY,kBACZC,MAAOlB,EACPmB,SAAU,SAAAN,GAAC,OAAIH,EAAeG,EAAEO,OAAOF,MAAM,OAEjD,sBAAKtC,UAAU,kCAAiC,UAC5C,gCAAO,oBACP,uBAAOoC,KAAK,WACZK,QAAS1B,EACTuB,MAAOvB,EACPwB,SAAU,SAAAN,GAAC,OAAIF,EAAaE,EAAES,cAAcD,QAAQ,OAGxD,uBAAOL,KAAK,SAASE,MAAM,YAAYtC,UAAU,oBAG7D,ECnCe2C,EAZA,WACX,IAAMC,GAAO,IAAIC,MAAOC,cAExB,OACA,mCACE,8BAAG,kBAAkBF,KACrB,cAAC,IAAI,CAACG,GAAG,SAAQ,SAAC,YAIxB,ECDeC,EATD,WACZ,OACE,gCACE,6BAAI,kBACJ,cAAC,IAAI,CAACD,GAAG,IAAG,SAAC,cAGnB,E,gBCgBME,EAAMC,YAXW,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAKNC,EAAWC,YAAaV,GCqEtBW,MAhFf,WACE,MAAsChC,oBAAS,GAAM,mBAA9CiC,EAAW,KAAEC,EAAc,KAElC,EAA0BlC,mBAAS,IAAG,mBAA/BN,EAAK,KAAEyC,EAAQ,KAEtB,EAAwCnC,oBAAS,GAAM,mBAAhDoC,EAAY,KAAEC,EAAe,KAE9BC,EAAgBC,YAAWT,EAAU,YAErCU,EAAiBC,YAAMH,EAAeI,YAAQ,cA+CpD,OA7CAC,qBAAU,WACRC,YAAWJ,GAAgB,SAACK,GAClB,IAAIC,EAAW,GACfD,EAASE,KAAKC,SAAQ,SAACC,GACrBH,EAASI,KAAK,2BAAID,EAAIE,QAAM,IAAE9D,GAAI4D,EAAI5D,KACxC,IACA8C,EAASW,EACnB,GACF,GAAG,IAsCD,cAAC,IAAM,UACD,eAAC,IAAM,WACL,cAAC,IAAK,CAACM,KAAK,IAAIC,QACd,sBAAKjF,UAAU,YAAW,UACxB,cAAC,EAAM,CAACI,OAAQ,kBAAM0D,GAAgBD,EAAY,EAAExD,QAASwD,IAC5DA,GAAe,cAAC,EAAO,CAAClC,MArCvB,SAAChB,GAIfuE,YAAOhB,EAAc,2BAAKvD,GAAI,IAAEwE,UAAWC,gBAC7C,IAiCe9D,EAAM+D,OAAS,EAAI,cAAC,EAAK,CAAC/D,MAAOA,EAAOV,SA9BpC,SAACK,GAElB,IAAMqE,EAAST,YAAInB,EAAU,WAAYzC,GACzCsE,YAAUD,EACZ,EA0B6EzE,SAvBtD,SAACI,GAEtB,IAAMqE,EAAST,YAAInB,EAAU,WAAYzC,GACzCuE,YAAOF,GACJG,MAAK,SAACZ,GACL,IAAM9D,EAAY8D,EAAIE,OAAOhE,UAC7B2E,YAAUJ,EAAO,CAACvE,WAAYA,GAChC,GAEJ,EAcuGQ,cAXjF,WACpB0C,GAAiBD,EACnB,EASqIlD,cAAekD,IAAmB,mBACzJ,cAAC,EAAM,SAGX,cAAC,IAAK,CAACgB,KAAK,QAAQC,QAClB,sBAAKjF,UAAU,YAAW,UACxB,cAAC,EAAM,CAACI,OAAQ,kBAAM0D,GAAgBD,EAAY,EAAExD,QAASwD,IAC7D,cAAC,EAAK,IACN,cAAC,EAAM,aAOvB,ECjFe8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBJ,MAAK,YAAkD,IAA/CK,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACV,GAEJ,ECJaO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORb,G","file":"static/js/main.e8162992.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n  return <button style={{ backgroundColor:color }} className='btn' onClick={onClick}>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'yellow'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button  from './Button'\nimport { useLocation } from \"react-router-dom\"\n\nconst Header = ({ title , onShow, showAdd}) => {\n  const location = useLocation();\n  console.log(location);\n\n  return (\n    <header className='header'>\n        <h1>{title}</h1>\n        {location.pathname === \"/\" && (<Button  color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onShow}/>)}\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst task = ({task, onDelete, onToggle, showCompleted}) => {\n  return (\n    <div className={`task ${task.completed ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)} style={{display: (task.completed === true && showCompleted === true) && 'none'}} >\n        <h3>{task.title} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\n        <p>{task.description}</p>\n    </div>\n  )\n}\n\nexport default task\n","\nimport Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle, hideCompleted, showCompleted}) => {\n\n    return (\n    <>\n        <button className={`btn ${showCompleted}`} onClick={hideCompleted}>{showCompleted === true ? \"Show\" : \"Hide\"} Completed Tasks</button>\n        {tasks.map(task => (\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} showCompleted={showCompleted}/>\n        ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [completed, setCompleted] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!title) {\n            alert('Please add task')\n            return\n        }\n\n        onAdd({ title, description, completed })\n\n        setTitle('')\n        setDescription('')\n        setCompleted(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text'\n                placeholder='Add Task'\n                value={title}\n                onChange={e => setTitle(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Description</label>\n                <input type='text'\n                placeholder='Add Description'\n                value={description}\n                onChange={e => setDescription(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Task Completed?</label>\n                <input type='checkbox'\n                checked={completed}\n                value={completed}\n                onChange={e => setCompleted(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { Link } from 'react-router-dom'\n\nconst Footer = () => {\n    const year = new Date().getFullYear();\n\n    return (\n    <footer>\n      <p>Copyright &copy; {year}</p>\n      <Link to='/about'>About</Link>\n\n    </footer>\n  )\n}\n\nexport default Footer\n","import { Link } from 'react-router-dom'\n\nconst About = () => {\n  return (\n    <div>\n      <h4>Version 2.0.0</h4>\n      <Link to='/'>Go Back</Link>\n    </div>\n  )\n}\n\nexport default About\n","import { initializeApp } from \"firebase/app\";\nimport { getFirestore } from 'firebase/firestore'\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyBKDom395i-KkPese98aicIpA6zfsUiSgo\",\n//   authDomain: \"react-task-tracker-d0559.firebaseapp.com\",\n//   projectId: \"react-task-tracker-d0559\",\n//   storageBucket: \"react-task-tracker-d0559.appspot.com\",\n//   messagingSenderId: \"1041810368735\",\n//   appId: \"1:1041810368735:web:d73853e30315aa3c56a16a\",\n//   measurementId: \"G-JY0196WDSC\"\n// };\n\n//exceeded queries - need to start new project\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD_P7V5hcr-qQ_qu7BJlPQITQ5ATc_f9mI\",\n    authDomain: \"reacttasktracker2.firebaseapp.com\",\n    projectId: \"reacttasktracker2\",\n    storageBucket: \"reacttasktracker2.appspot.com\",\n    messagingSenderId: \"54058129813\",\n    appId: \"1:54058129813:web:48c149f4dd0bf6377ebe9c\",\n    measurementId: \"G-QVEJDRT5P0\"\n  };\n\n\nconst app = initializeApp(firebaseConfig);\nexport const database = getFirestore(app);\n","import { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n//Using Firebase to store tasks\nimport { database } from './firebaseConfig'\nimport { collection, addDoc,\n  serverTimestamp, onSnapshot,\n  doc, deleteDoc, query,\n  orderBy, updateDoc, getDoc } from 'firebase/firestore'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  const [tasks, setTasks] = useState([]);\n\n  const [hideComplete, setHideComplete] = useState(false)\n\n  const collectionRef = collection(database, 'taskList');\n\n  const orderedListRef = query(collectionRef, orderBy('updatedAt'));\n\n  useEffect(() => {\n    onSnapshot(orderedListRef, (snapshot) => {\n              let taskList = [];\n              snapshot.docs.forEach((doc) => {\n                taskList.push({...doc.data(), id: doc.id})\n              })\n              setTasks(taskList)\n    })\n  }, [])\n\n\n\n\n  //Add Task\n  const addTask = (task) => {\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n    addDoc(collectionRef, {...task, updatedAt: serverTimestamp()});\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    // setTasks(tasks.filter(task => task.id !== id))\n    const docRef = doc(database, 'taskList', id);\n    deleteDoc(docRef);\n  }\n\n  // Toggle Reminder (will become Task done)\n  const toggleReminder = (id) => {\n    // setTasks(tasks.map(task => task.id === id ? {...task, completed: !task.completed} : task))\n    const docRef = doc(database, 'taskList', id);\n    getDoc(docRef)\n      .then((doc) => {\n        const completed = doc.data().completed;\n        updateDoc(docRef,{completed: !completed})\n      })\n\n  }\n\n  //Show/Hide the completed Tasks\n  const showCompleted = () => {\n    setHideComplete(!hideComplete);\n  }\n\n  return (\n    <Router>\n          <Routes>\n            <Route path=\"*\" element={\n              <div className=\"container\">\n                <Header onShow={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} hideCompleted={showCompleted} showCompleted={hideComplete} /> : 'No Tasks to Show'}\n                <Footer />\n              </div>\n            } />\n            <Route path=\"about\" element={\n              <div className=\"container\">\n                <Header onShow={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n                <About />\n                <Footer />\n              </div>\n            } />\n          </Routes>\n    </Router>\n\n  );\n}\n\nexport default App;\n\n\n\n\n//   const [tasks, setTasks] = useState([\n//     {\n//         id: 1,\n//         title: 'Do all the Form Checks',\n//         description: 'Go on Facebook and review the performances from the clients',\n//         completed: true\n//     },\n//     {\n//         id: 2,\n//         title: 'Complete portfolio website',\n//         description: 'Finish styling the projects section as well as the contact me section',\n//         completed: false\n//     },\n//     {\n//         id: 3,\n//         title: 'Food Shopping',\n//         description: 'Purchase all the items to make vegan crepes',\n//         completed: false\n//     }\n// ]);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}