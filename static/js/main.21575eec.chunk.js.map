{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onShow","showAdd","task","onDelete","onToggle","completed","onDoubleClick","id","cursor","description","Tasks","tasks","map","Task","AddTask","onAdd","useState","setTitle","setDescription","setCompleted","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.21575eec.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n  return <button style={{ backgroundColor:color }} className='btn' onClick={onClick}>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'yellow'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button  from './Button'\n\nconst Header = ({ title , onShow, showAdd}) => {\n\n  return (\n    <header className='header'>\n        <h1>{title}</h1>\n        <Button  color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onShow}/>\n    </header>\n  )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst task = ({task, onDelete, onToggle}) => {\n  return (\n    <div className={`task ${task.completed ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n        <h3>{task.title} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/></h3>\n        <p>{task.description}</p>\n    </div>\n  )\n}\n\nexport default task\n","\nimport Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n    <>\n        {tasks.map(task => (\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n        ))}\n    </>\n  )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [completed, setCompleted] = useState(false);\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!title) {\n            alert('Please add task')\n            return\n        }\n\n        onAdd({ title, description, completed })\n\n        setTitle('')\n        setDescription('')\n        setCompleted(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text'\n                placeholder='Add Task'\n                value={title}\n                onChange={e => setTitle(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Description</label>\n                <input type='text'\n                placeholder='Add Description'\n                value={description}\n                onChange={e => setDescription(e.target.value)} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Task Completed?</label>\n                <input type='checkbox'\n                checked={completed}\n                value={completed}\n                onChange={e => setCompleted(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask';\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        title: 'Do all the Form Checks',\n        description: 'Go on Facebook and review the performances from the clients',\n        completed: true\n    },\n    {\n        id: 2,\n        title: 'Complete portfolio website',\n        description: 'Finish styling the projects section as well as the contact me section',\n        completed: false\n    },\n    {\n        id: 3,\n        title: 'Food Shopping',\n        description: 'Purchase all the items to make vegan crepes',\n        completed: false\n    }\n]);\n\n//Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter(task=> task.id !== id))\n}\n\n// Toggle Reminder (will become Task done)\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(task => task.id === id ? {...task, completed: !task.completed} : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onShow={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks to Show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}